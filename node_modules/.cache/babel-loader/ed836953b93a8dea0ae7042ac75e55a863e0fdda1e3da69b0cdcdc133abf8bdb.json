{"ast":null,"code":"var _jsxFileName = \"/Users/asme/Desktop/web/react-todo-app/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = ({\n  todo,\n  deleteTodo,\n  editTodo\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTodo, setEditedTodo] = useState(todo);\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleSaveClick = () => {\n    editTodo(editedTodo);\n    setIsEditing(false);\n  };\n  const handleCancelClick = () => {\n    setIsEditing(false);\n    setEditedTodo(todo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editedTodo,\n          onChange: e => setEditedTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveClick,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [todo, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditClick,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"b4cuNGlOQVaNZyyZF11wnBT5OcE=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todo","todo","deleteTodo","editTodo","_s","isEditing","setIsEditing","editedTodo","setEditedTodo","handleEditClick","handleSaveClick","handleCancelClick","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/asme/Desktop/web/react-todo-app/src/components/Todo.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Todo = ({ todo, deleteTodo, editTodo }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTodo, setEditedTodo] = useState(todo);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleSaveClick = () => {\n    editTodo(editedTodo);\n    setIsEditing(false);\n  };\n\n  const handleCancelClick = () => {\n    setIsEditing(false);\n    setEditedTodo(todo);\n  };\n\n  return (\n    <div className=\"todo\">\n      <li>\n        {isEditing ? (\n          <div>\n            <input\n              type=\"text\"\n              value={editedTodo}\n              onChange={(e) => setEditedTodo(e.target.value)}\n            />\n            <button onClick={handleSaveClick}>Update</button>\n            <button onClick={handleCancelClick}>Cancel</button>\n          </div>\n        ) : (\n          <div>\n            {todo}\n            <button onClick={handleEditClick}>Edit</button>\n            <button onClick={() => deleteTodo(todo)}>Delete</button>\n          </div>\n        )}\n      </li>\n    </div>\n  );\n};\n\nexport default Todo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAACI,IAAI,CAAC;EAElD,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5BH,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5BP,QAAQ,CAACI,UAAU,CAAC;IACpBD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC9BL,YAAY,CAAC,KAAK,CAAC;IACnBE,aAAa,CAACP,IAAI,CAAC;EACrB,CAAC;EAED,oBACEF,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBd,OAAA;MAAAc,QAAA,EACGR,SAAS,gBACRN,OAAA;QAAAc,QAAA,gBACEd,OAAA;UACEe,IAAI,EAAC,MAAM;UACXC,KAAK,EAAER,UAAW;UAClBS,QAAQ,EAAGC,CAAC,IAAKT,aAAa,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACFvB,OAAA;UAAQwB,OAAO,EAAEb,eAAgB;UAAAG,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjDvB,OAAA;UAAQwB,OAAO,EAAEZ,iBAAkB;UAAAE,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,gBAENvB,OAAA;QAAAc,QAAA,GACGZ,IAAI,eACLF,OAAA;UAAQwB,OAAO,EAAEd,eAAgB;UAAAI,QAAA,EAAC;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/CvB,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAACD,IAAI,CAAE;UAAAY,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCIJ,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}